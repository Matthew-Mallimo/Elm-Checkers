var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'SelectCheker') {
			var _p1 = _p0._0;
			return (_elm_lang$core$Native_Utils.eq(_p1.chkColor, 'white') && model.turn) ? _elm_lang$core$Native_Utils.update(
				model,
				{
					grid: A2(_user$project$CheckerUtils$selectCell, _p1, model.grid)
				}) : ((_elm_lang$core$Native_Utils.eq(_p1.chkColor, 'black') && (!model.turn)) ? _elm_lang$core$Native_Utils.update(
				model,
				{
					grid: A2(_user$project$CheckerUtils$selectCell, _p1, model.grid)
				}) : model);
		} else {
			var grid = A2(_user$project$CheckerUtils$makeMoveFromSelected, _p0._0, model.grid);
			var _p2 = grid;
			if (_p2.ctor === 'Just') {
				return _elm_lang$core$Native_Utils.update(
					model,
					{grid: _p2._0, turn: !model.turn});
			} else {
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						grid: _user$project$CheckerUtils$clearGrid(model.grid),
						turn: model.turn
					});
			}
		}
	});
var _user$project$Main$view = function (model) {
	return _user$project$Board$renderList(model.grid);
};
var _user$project$Main$model = A2(_user$project$CheckerUtils$Model, _user$project$Board$initialGrid, true);
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
