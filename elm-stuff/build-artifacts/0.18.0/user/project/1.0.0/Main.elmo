var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$CheckerUtils$Reset),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Reset Board'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Board$renderList(model.grid),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$initModel = A2(_user$project$CheckerUtils$Model, _user$project$Board$initialGrid, true);
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SelectCheker':
				var _p1 = _p0._0;
				return (_elm_lang$core$Native_Utils.eq(_p1.chkColor, 'white') && model.turn) ? _elm_lang$core$Native_Utils.update(
					model,
					{
						grid: A2(_user$project$CheckerUtils$selectCell, _p1, model.grid)
					}) : ((_elm_lang$core$Native_Utils.eq(_p1.chkColor, 'black') && (!model.turn)) ? _elm_lang$core$Native_Utils.update(
					model,
					{
						grid: A2(_user$project$CheckerUtils$selectCell, _p1, model.grid)
					}) : model);
			case 'MakeMove':
				var grid = A2(_user$project$CheckerUtils$makeMoveFromSelected, _p0._0, model.grid);
				var _p2 = grid;
				if (_p2.ctor === 'Just') {
					return _elm_lang$core$Native_Utils.update(
						model,
						{grid: _p2._0, turn: !model.turn});
				} else {
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							grid: _user$project$CheckerUtils$clearGrid(model.grid),
							turn: model.turn
						});
				}
			default:
				return _user$project$Main$initModel;
		}
	});
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$initModel, view: _user$project$Main$view, update: _user$project$Main$update})();
